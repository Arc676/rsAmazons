name: Release

on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag for which to build the app"
        required: true

env:
  # update with the name of the main binary
  binary: 'amazons'


jobs:
  # Build for Linux
  release-linux:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.tag == '' }}

    steps:
      - uses: little-core-labs/get-git-tag@v3.0.2
        id: get_version
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          override: true

      - name: Build backend
        run: |
          cd Amazons
          make lib
          cd ..
      - name: Get dependencies
        run: |
          sudo apt update
          sudo apt install libxcb-shape0-dev libxcb-xfixes0-dev
      - name: Build frontend
        run: |
          cargo build --release --target x86_64-unknown-linux-gnu

      - name: Prepare package
        run: |
          mkdir linux
          cp target/x86_64-unknown-linux-gnu/release/${{ env.binary }} linux/
      - name: Package as a zip
        uses: vimtor/action-zip@v1
        with:
          files: linux
          dest: ${{ env.binary }}.zip

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.binary }}.zip
          asset_name: ${{ env.binary }}-linux-${{ steps.get_version.outputs.tag }}.zip
          tag: ${{ github.ref }}
          overwrite: true

  # Build for Windows
  release-windows:
    runs-on: windows-latest
    if: ${{ github.event.inputs.tag == '' }}

    steps:
      - uses: little-core-labs/get-git-tag@v3.0.2
        id: get_version
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-msvc
          override: true

      - uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: x64

      - name: Build backend
        run: |
          cd Amazons
          make CC=msvc lib
          mv libamazons.a amazons.lib
          cd ..
      - name: Build
        run: |
          cargo build --release --target x86_64-pc-windows-msvc

      - name: Prepare package
        run: |
          mkdir windows
          cp target/x86_64-pc-windows-msvc/release/${{ env.binary }}.exe windows/
      - name: Package as a zip
        uses: vimtor/action-zip@v1
        with:
          files: windows
          dest: ${{ env.binary }}.zip

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.binary }}.zip
          asset_name: ${{ env.binary }}-windows-${{ steps.get_version.outputs.tag }}.zip
          tag: ${{ github.ref }}
          overwrite: true

  # Build for macOS
  release-macos:
    runs-on: macOS-latest
    if: ${{ github.event.inputs.tag == '' }}

    steps:
      - uses: little-core-labs/get-git-tag@v3.0.2
        id: get_version
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-apple-darwin
          override: true
      - name: Environment Setup
        run: |
          export CFLAGS="-fno-stack-check"
          export MACOSX_DEPLOYMENT_TARGET="10.9"

      - name: Build backend
        run: |
          cd Amazons
          make lib
          cd ..
      - name: Build
        run: |
          cargo build --release --target x86_64-apple-darwin

      - name: Prepare Package
        run: |
          mkdir -p ${{ env.binary }}.app/Contents/MacOS
          cp target/x86_64-apple-darwin/release/${{ env.binary }} ${{ env.binary }}.app/Contents/MacOS/
          hdiutil create -fs HFS+ -volname "${{ env.binary }}" -srcfolder ${{ env.binary }}.app ${{ env.binary }}.dmg

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.binary }}.dmg
          asset_name: ${{ env.binary }}-macos-${{ steps.get_version.outputs.tag }}.dmg
          tag: ${{ github.ref }}
          overwrite: true
